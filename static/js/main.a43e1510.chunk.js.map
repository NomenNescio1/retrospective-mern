{"version":3,"sources":["components/Header.js","utils/utils.ts","context/Error.tsx","utils/components.tsx","components/Card.tsx","components/Column.tsx","App.tsx","index.js"],"names":["Header","className","rel","href","target","API_ENDPOINT","ErrorContext","createContext","state","message","setError","ColumnsContainer","styled","div","ColumnElement","props","bgColor","CardElement","OptionsContainer","AddCardButton","form","Card","likes","content","_id","updateCards","index","_colId","color","updateRef","useRef","useState","contentState","setContent","likesState","setLikes","displayInput","setDisplayInput","showModal","setModal","useContext","editCard","event","a","preventDefault","fetch","method","headers","body","JSON","stringify","colID","cardID","update","current","value","catch","error","console","variant","fetchLikesCount","_","deleteCard","Modal","show","onHide","centered","closeButton","Title","Body","Footer","Button","onClick","draggableId","provided","ref","innerRef","dragHandleProps","draggableProps","fill","id","style","Collapse","in","onSubmit","placeholder","type","name","Column","items","nameColRef","updatedTitle","setUpdatedTitle","cards","setCards","displayForm","setDisplayForm","displayColForm","setdisplayColForm","inputValue","setInputValue","createCard","colId","response","json","result","newCard","category","cardsProp","updateTitle","ev","cardsFiltered","filter","card","onChange","droppableId","droppableProps","marginTop","map","key","App","columnsState","setColumn","errorState","errorContextValue","useMemo","useEffect","controller","AbortController","setTimeout","abort","signal","data","clearTimeout","getColumns","onDragEnd","destination","source","columns","sourceCol","find","el","destCol","item","splice","Provider","Alert","onClose","dismissible","closeLabel","closeVariant","Heading","column","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a43e1510.chunk.js","sourcesContent":["export const Header = () => (\r\n  <header className=\"top col-8 center\">\r\n    <h1>Retrospective App v2</h1>\r\n    <h3>This is a scrum retrospective app built using the MERN stack.</h3>\r\n    <p>Right now, the user can create cards, edit them, delete them and like them. I've also implemented drag and drop using <a rel=\"noreferrer\" href=\"https://github.com/atlassian/react-beautiful-dnd\"  target=\"_blank\">react-beautiful-dnd.</a> </p><br />\r\n    <p>These are the issues I'm working on:</p>\r\n    <ul>\r\n      <li>After creating or deleting a card, the drag and drop fails.</li> \r\n      <li>Dragged items won't get updated in the database records.</li>\r\n      <li>A custom hook for fetching would be nice to have.</li>\r\n    </ul>\r\n  </header>\r\n);","const isDev = false;\nexport const API_ENDPOINT = isDev ? 'http://localhost:3001' : 'https://guarded-spire-19484.herokuapp.com';\n","import { createContext } from \"react\";\nimport { ErrorState, ErrorContextType } from '../utils/types'\n\nexport const ErrorContext = createContext<ErrorContextType>({\n    state: false,\n    message: '',\n    setError: ({ state, message }: ErrorState) => {}\n});\n","import styled from 'styled-components';\n\nexport const ColumnsContainer = styled.div`\n    display: flex;\n    gap: 20px;\n    margin: 20px;\n    @media (max-width: 768px) {\n        flex-direction: column;\n      }\n`;\n\nexport const ColumnElement = styled.div`\n    flex: 1;\n    background-color: ${(props: { bgColor: string }) => props.bgColor};\n    padding: 15px;\n    border-radius: 8px;\n`;\n\nexport const CardElement = styled.div`\n    margin-bottom: 10px;\n    background-color: rgb(244, 247, 248, .8);\n    padding: 10px; 0;\n    border-radius: 8px;`;\n\nexport const OptionsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    padding: 10px;\n    justify-content: flex-end;\n    align-items: center;\n`;\n\nexport const CreateColContainer = styled.div`\n    width: 20vw;\n    margin: 0 auto;\n    @media (max-width: 768px) {\n        width: 70vw;\n      }`;\n\nexport const CreateColForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 10px;\n`;\n\nexport const InputContainer = styled.div`\n    display: flex;\n    gap: 10px;\n`;\n\nexport const AddCardButton = styled.div`\n    width: 100%;\n    background-color: rgb(244, 247, 248, .7);\n    padding: 10px 0;\n    font-size: 20px;\n    margin: 20px 0;\n    cursor: pointer;\n`;","import { useState, useRef, BaseSyntheticEvent, useContext } from \"react\";\nimport { FaPencilAlt, FaTrashAlt, FaHeart } from \"react-icons/fa\";\nimport { API_ENDPOINT } from \"../utils/utils\";\nimport { CardProps } from \"../utils/types\";\nimport { ErrorContext } from '../context/Error'\nimport { Modal, Button, Collapse } from \"react-bootstrap\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { CardElement, OptionsContainer } from \"../utils/components\";\n\nconst Card = ({ likes, content, _id, updateCards, index, _colId, color }: CardProps): JSX.Element => {\n\n\tconst updateRef = useRef<HTMLInputElement | null>(null);\n\tconst [contentState, setContent] = useState<string | undefined>(content || '');\n\tconst [likesState, setLikes] = useState<number | undefined>(likes);\n\tconst [displayInput, setDisplayInput] = useState(false);\n\tconst [showModal, setModal] = useState(false);\n\tconst { setError } = useContext(ErrorContext);\n\n\tconst editCard = async (event: BaseSyntheticEvent): Promise<void> => {\n\t\tevent.preventDefault();\n\t\tawait fetch(`${API_ENDPOINT}/editcard`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcolID: _colId,\n\t\t\t\tcardID: _id,\n\t\t\t\tupdate: updateRef.current?.value\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t\tsetError({ state: true, message: 'Backend endpoint not available.', variant: 'warning' });\n\t\t});\n\n\t\tsetContent(updateRef.current?.value);\n\t\tupdateRef.current!.value = '';\n\t\tsetDisplayInput(false);\n\t};\n\n\tconst fetchLikesCount = async (cardID: string | undefined, colID: string | undefined): Promise<void> => {\n\t\tsetLikes(state => state as number + 1);\n\n\t\tawait fetch(`${API_ENDPOINT}/updatelikes`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcolID,\n\t\t\t\tcardID\n\t\t\t})\n\t\t}).catch(_ => {\n\n\t\t\tsetError({ state: true, message: 'Endpoint not available.' });\n\t\t});\n\t};\n\n\tconst deleteCard = async (cardID: string | undefined, colID: string | undefined): Promise<void> => {\n\t\tawait fetch(`${API_ENDPOINT}/deletecard`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcolID,\n\t\t\t\tcardID\n\t\t\t})\n\t\t}).catch(_ => {\n\t\t\tsetError({ state: true, message: 'Endpoint not available.' });\n\t\t});\n\n\t\tupdateCards && updateCards(cardID);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{<Modal show={showModal} onHide={() => setModal(false)} centered>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>You are about to delete a card</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Are you sure you want to continue?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setModal(false)}>\n\t\t\t\t\t\tNah\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => deleteCard(_id, _colId)}>\n\t\t\t\t\t\tYes\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>}\n\t\t\t<Draggable key={_id} draggableId={_id as string} index={index as number}>\n\t\t\t\t{provided => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<CardElement ref={provided.innerRef} {...provided.dragHandleProps} {...provided.draggableProps}>\n\t\t\t\t\t\t\t{contentState}\n\t\t\t\t\t\t\t<OptionsContainer>\n\t\t\t\t\t\t\t\t<FaPencilAlt fill={color} className=\"icon edit-icon\" onClick={() => setDisplayInput(!displayInput)} id=\"edit\" />\n\t\t\t\t\t\t\t\t<FaTrashAlt fill={color} onClick={() => setModal(true)} className=\"icon trash-icon\" />\n\t\t\t\t\t\t\t\t<FaHeart fill={color} onClick={() => fetchLikesCount(_id, _colId)} className=\"icon heart-icon\" />\n\t\t\t\t\t\t\t\t<span style={{ color: 'black' }}>{likesState}</span>\n\t\t\t\t\t\t\t</OptionsContainer>\n\t\t\t\t\t\t\t<Collapse in={displayInput}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<form className={'update-card-form'} onSubmit={editCard}>\n\t\t\t\t\t\t\t\t\t\t<input placeholder=\"Edit card\" className=\"input-update\" type=\"text\" name=\"update\" ref={updateRef} />\n\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Update\" />\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t</CardElement>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Draggable>\n\t\t</>);\n}\n\nexport default Card;\n","import { useState, useContext, BaseSyntheticEvent, useRef } from \"react\";\nimport Card from './Card';\nimport { CardProps, ColumnProps } from \"../utils/types\";\nimport { API_ENDPOINT } from \"../utils/utils\";\nimport { ErrorContext } from \"../context/Error\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { ColumnElement, AddCardButton } from \"../utils/components\";\nimport { FaPencilAlt } from 'react-icons/fa'\nimport { Collapse } from \"react-bootstrap\";\n\nconst Column = ({ name, color, index, _id, items }: ColumnProps): JSX.Element => {\n\n\tconst nameColRef = useRef<HTMLInputElement | null>(null);\n\tconst [updatedTitle, setUpdatedTitle] = useState(name);\n\tconst [cards, setCards] = useState<CardProps[]>(items as CardProps[]);\n\tconst [displayForm, setDisplayForm] = useState(false);\n\tconst [displayColForm, setdisplayColForm] = useState(false);\n\tconst [inputValue, setInputValue] = useState('');\n\tconst { setError } = useContext(ErrorContext);\n\n\tconst createCard = async (event: BaseSyntheticEvent): Promise<void | JSX.Element> => {\n\t\tevent.preventDefault();\n\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_ENDPOINT}/createcard`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tcontent: inputValue,\n\t\t\t\t\tcolId: _id,\n\t\t\t\t\tlikes: 0,\n\t\t\t\t\tcolor\n\t\t\t\t})\n\t\t\t});\n\n\t\t\tconst result = await response.json();\n\t\t\tconst newCard: CardProps = {\n\t\t\t\t_id: result._id,\n\t\t\t\tcontent: inputValue,\n\t\t\t\tcategory: name,\n\t\t\t\tlikes: 0,\n\t\t\t\tcolor\n\t\t\t};\n\n\t\t\tsetCards(cardsProp => cardsProp ? [...cardsProp, newCard] : [newCard]);\n\t\t\tsetInputValue('');\n\t\t\tsetDisplayForm(false);\n\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\n\t\t\tsetError({ state: true, message: 'Can\\'t fetch resource. Try again?' });\n\t\t}\n\t}\n\n\tconst handleInputChange = (ev: BaseSyntheticEvent): void => {\n\t\tev.preventDefault();\n\n\t\tsetInputValue(ev.target.value);\n\t};\n\n\tconst updateTitle = async (ev: BaseSyntheticEvent) => {\n\t\tev.preventDefault();\n\t\tawait fetch(`${API_ENDPOINT}/editcol`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcolID: _id,\n\t\t\t\tupdate: nameColRef.current?.value\n\t\t\t})\n\t\t});\n\n\t\tsetUpdatedTitle(nameColRef.current?.value);\n\t\tnameColRef.current!.value = '';\n\t\tsetdisplayColForm(false);\n\n\t};\n\n\tconst updateCards = (cardID: string): void => {\n\t\tconst cardsFiltered = cards.filter(card => card._id !== cardID)\n\n\t\tsetCards(cardsFiltered);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ColumnElement bgColor={color as string}>\n\t\t\t\t<div className=\"update-card-form\">\n\t\t\t\t\t<h1 className=\"col-name\">{updatedTitle}</h1>\n\t\t\t\t\t<FaPencilAlt fill={'white'} className=\"icon edit-icon\" onClick={() => setdisplayColForm(!displayColForm)} id=\"edit\" />\n\t\t\t\t</div>\n\t\t\t\t<>\n\t\t\t\t\t<Collapse in={displayColForm}>\n\t\t\t\t\t\t<form onSubmit={updateTitle} className=\"update-card-form\">\n\t\t\t\t\t\t\t<input ref={nameColRef} type=\"text\" name=\"new-name\" />\n\t\t\t\t\t\t\t<input placeholder=\"New name\" type=\"submit\" value=\"Update\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Collapse></>\n\t\t\t\t<AddCardButton onClick={_ => setDisplayForm(!displayForm)}>Add card</AddCardButton>\n\t\t\t\t<Collapse in={displayForm}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<form onSubmit={createCard} className=\"update-card-form\">\n\t\t\t\t\t\t\t<input placeholder=\"Card content\" type=\"text\" className=\"input-create\" value={inputValue || ''} onChange={handleInputChange} name=\"content\" />\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Create\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</Collapse>\n\t\t\t\t<Droppable key={_id} droppableId={_id as string} >\n\t\t\t\t\t{provided => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div {...provided.droppableProps} ref={provided.innerRef} style={{ marginTop: '10px' }}>\n\t\t\t\t\t\t\t\t{cards.map((card, index) =>\n\t\t\t\t\t\t\t\t\t<Card {...card} key={card._id} _colId={_id} index={index} updateCards={updateCards} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</Droppable>\n\t\t\t</ColumnElement>\n\t\t</>\n\t);\n}\n\nexport default Column;","import { useState, useEffect, useMemo } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { Header } from './components/Header';\nimport Column from './components/Column';\nimport { API_ENDPOINT } from './utils/utils';\nimport { ColumnProps, ErrorState } from './utils/types';\nimport { ErrorContext } from './context/Error';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { ColumnsContainer } from './utils/components';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n\tconst [columnsState, setColumn] = useState<ColumnProps[]>([]);\n\tconst [errorState, setError] = useState<ErrorState>({ state: false, message: '' as string });\n\tconst errorContextValue = useMemo(() => ({ ...errorState, setError }), [errorState]);\n\n\tuseEffect(() => {\n\t\tconst controller = new AbortController();\n\t\tconst id = setTimeout(() => controller.abort(), 8000);\n\n\t\tasync function getColumns(): Promise<void> {\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`${API_ENDPOINT}/getcolumn/`, {\n\t\t\t\t\tsignal: controller.signal\n\t\t\t\t});\n\t\t\t\tlet data = await response.json();\n\t\t\t\tsetColumn(data);\n\n\t\t\t} catch (error) {\n\t\t\t\tsetError({ state: true, message: 'It seems the server is not responding. Try again?' });\n\t\t\t}\n\t\t}\n\n\t\tclearTimeout(id);\n\t\tgetColumns();\n\n\t}, []);\n\n\tconst onDragEnd = (result: DropResult) => {\n\t\tif (!result.destination) return;\n\t\tconst { source, destination } = result;\n\t\tlet columns = [...columnsState];\n\t\tconst sourceCol = columns.find(el => el._id === source.droppableId);\n\t\tconst destCol = columns.find(el => el._id === destination.droppableId);\n\t\tlet item = sourceCol?.items?.find(el => el._id === result.draggableId)\n\n\t\tif (!result.destination || !item || !destCol || !sourceCol) return;\n\n\t\tif (source.droppableId !== destination.droppableId) {\n\t\t\t//diff col\n\t\t\titem.color = destCol.color;\n\t\t\tsourceCol.items?.splice(source.index, 1);\n\t\t\tdestCol.items?.splice(destination.index, 0, item);\n\n\t\t} else {\n\t\t\t//same col\n\t\t\tsourceCol.items?.splice(source.index, 1);\n\t\t\tsourceCol.items?.splice(destination.index, 0, item);\n\t\t}\n\n\t\tsetColumn(columns);\n\t};\n\n\treturn (\n\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t<ErrorContext.Provider value={errorContextValue}>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t{errorState.state &&\n\t\t\t\t\t\t<Alert variant={errorState.variant || 'danger'} onClose={() => setError({ state: false })} dismissible closeLabel='close' closeVariant='white'>\n\t\t\t\t\t\t\t<Alert.Heading>There was an error with the app</Alert.Heading>\n\t\t\t\t\t\t\t<p>{errorState.message}</p>\n\t\t\t\t\t\t</Alert>}\n\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t<ColumnsContainer>\n\t\t\t\t\t\t\t{columnsState && columnsState.map((column: ColumnProps) =>\n\t\t\t\t\t\t\t\t<Column {...column} key={column._id} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ColumnsContainer>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ErrorContext.Provider>\n\t\t</DragDropContext>\n\t);\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}